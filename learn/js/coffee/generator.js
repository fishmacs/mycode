// Generated by CoffeeScript 1.9.3
(function() {
  var A, B, func, func1, perfectSQuares, x,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  perfectSQuares = function*() {
    var num;
    num = 0;
    while (true) {
      num += 1;
      (yield num * num);
    }
  };

  A = (function() {
    function A() {}

    return A;

  })();

  B = (function(superClass) {
    extend(B, superClass);

    function B() {
      return B.__super__.constructor.apply(this, arguments);
    }

    return B;

  })(A);

  func = function() {
    return {};
  };

  func1 = function() {
    return console.log(arguments.slice(2, 4));
  };

  x = f(function() {
    return f;
  });

  x = function(f) {
    return f;
  };

  func({
    a: 1
  });

}).call(this);
